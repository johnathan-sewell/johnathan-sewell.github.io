"use strict";(self.webpackChunkjohnathan_sewell=self.webpackChunkjohnathan_sewell||[]).push([[587],{7738:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var o=t(3274),a=t(4824);const i={slug:"react-flow",title:"React Flow for Elimination Brackets",authors:"johnathan"},s=void 0,d={permalink:"/react-flow",source:"@site/blog/2024-04-22-react-flow/index.md",title:"React Flow for Elimination Brackets",description:"Using React Flow to create a somewhat dynamic elimination bracket for a tournament.",date:"2024-04-22T00:00:00.000Z",formattedDate:"April 22, 2024",tags:[],readingTime:3.265,hasTruncateMarker:!0,authors:[{name:"Johnathan Sewell",url:"https://github.com/johnathan-sewell",imageURL:"https://avatars.githubusercontent.com/u/286782?v=4",key:"johnathan"}],frontMatter:{slug:"react-flow",title:"React Flow for Elimination Brackets",authors:"johnathan"},unlisted:!1,nextItem:{title:"Logging in the Frontend API layer",permalink:"/logging-frontend-api-layer"}},r={authorsImageUrls:[void 0]},c=[{value:"Starting off with 3 nodes and 2 edges",id:"starting-off-with-3-nodes-and-2-edges",level:2},{value:"Custom Match component for nodes",id:"custom-match-component-for-nodes",level:2},{value:"Adding edges to connect the nodes",id:"adding-edges-to-connect-the-nodes",level:2}];function l(n){const e={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"Using React Flow to create a somewhat dynamic elimination bracket for a tournament."}),"\n",(0,o.jsx)(e.h2,{id:"starting-off-with-3-nodes-and-2-edges",children:"Starting off with 3 nodes and 2 edges"}),"\n",(0,o.jsx)(e.p,{children:'Here I define a custom node type "match" that has a label and two handles, one on the left and one on the right.'}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"3 nodes and 2 edges",src:t(9316).A+"",width:"1526",height:"726"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",children:'import ReactFlow, { Handle, Position } from "reactflow";\nimport "reactflow/dist/style.css";\n\nfunction MatchNode({ data }: { data: { label: string } }) {\n  return (\n    <>\n      <Handle type="target" position={Position.Left} id="a" />\n      <div className="rounded border p-5">{data.label}</div>\n      <Handle type="source" position={Position.Right} id="b" />\n    </>\n  );\n}\n\nconst nodeTypes = { match: MatchNode };\n\nconst initialNodes = [\n  { id: "1", type: "match", position: { x: 100, y: 100 }, data: { label: "Match 1" } },\n  { id: "2", type: "match", position: { x: 100, y: 300 }, data: { label: "Match 2" } },\n  { id: "3", type: "match", position: { x: 300, y: 200 }, data: { label: "Match 3" } },\n];\nconst initialEdges = [\n  { id: "e1-3", source: "1", target: "3" },\n  { id: "e2-3", source: "2", target: "3" },\n];\n\nexport function FlowTest() {\n  return (\n    <div style={{ width: "100vw", height: "100vh" }}>\n      <ReactFlow nodeTypes={nodeTypes} nodes={initialNodes} edges={initialEdges} />\n    </div>\n  );\n}\n\n'})}),"\n",(0,o.jsx)(e.h2,{id:"custom-match-component-for-nodes",children:"Custom Match component for nodes"}),"\n",(0,o.jsx)(e.p,{children:"Next I add a custom match component that shows team logos, names, and scores. Positions are hard-coded for each match index, these will remain hard-coded so that the layout matches the bracket design exactly."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Custom match components and x,y coordinates",src:t(5555).A+"",width:"2312",height:"1440"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",children:'import ReactFlow, { Handle, Position } from "reactflow";\nimport { double_elim_8_finished } from "../DoubleElim8/mockData";\nimport "reactflow/dist/style.css";\nimport { Match } from "./Match";\nimport { BracketSeries } from "@data/tournament/shared/types/bracket";\n\nconst matchIndexToPositions: { [key: number]: { node: { x: number; y: number } } } = {\n  // upper bracket quarter final 1\n  0: {\n    node: {\n      x: 0,\n      y: 45,\n    },\n  },\n  // upper bracket quarter final 2\n  1: {\n    node: {\n      x: 0,\n      y: 151,\n    },\n  },\n  // upper bracket quarter final 3\n  2: {\n    node: {\n      x: 0,\n      y: 257,\n    },\n  },\n  // upper bracket quarter final 4\n  3: {\n    node: {\n      x: 0,\n      y: 363,\n    },\n  },\n  // lower bracket, round 1, match 1\n  4: {\n    node: {\n      x: 0,\n      y: 520,\n    },\n  },\n  // lower bracket, round 1, match 2\n  5: {\n    node: {\n      x: 0,\n      y: 626,\n    },\n  },\n  // upper bracket semi final 1\n  6: {\n    node: {\n      x: 350,\n      y: 97,\n    },\n  },\n  // upper bracket semi final 2\n  7: {\n    node: {\n      x: 350,\n      y: 311,\n    },\n  },\n  // lower bracket round 2, match 1\n  8: {\n    node: {\n      x: 234,\n      y: 520,\n    },\n  },\n  // lower bracket round 2, match 2\n  9: {\n    node: {\n      x: 234,\n      y: 626,\n    },\n  },\n  // lower bracket round 3\n  10: {\n    node: {\n      x: 468,\n      y: 573,\n    },\n  },\n  // upper bracket final\n  11: {\n    node: {\n      x: 702,\n      y: 204,\n    },\n  },\n  // lower bracket final\n  12: {\n    node: {\n      x: 702,\n      y: 573,\n    },\n  },\n  // grand final\n  13: {\n    node: {\n      x: 927,\n      y: 420,\n    },\n  },\n};\n\nfunction MatchNode({ data }: { data: BracketSeries }) {\n  return (\n    <>\n      <Handle type="target" position={Position.Left} id="a" />\n      {/* custom match component showing team logos, names, scores */}\n      <Match match={data} />\n      <Handle type="source" position={Position.Right} id="b" />\n    </>\n  );\n}\n\nconst nodeTypes = { match: MatchNode };\n\nconst initialNodes = double_elim_8_finished?.matches?.map((match) => ({\n  id: match.uuid,\n  type: "match",\n  position: matchIndexToPositions[match.index].node,\n  data: match,\n}));\nconst initialEdges = [\n];\n\nexport function FlowTest() {\n  return (\n    <div className="relative w-full">\n      <div className="custom-scrollbar relative overflow-x-scroll">\n        <div\n          style={{\n            width: "1075px",\n            height: "720px",\n            minWidth: "1075px",\n            minHeight: "600px",\n          }}\n        >\n          <ReactFlow nodeTypes={nodeTypes} nodes={initialNodes} edges={initialEdges} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n'})}),"\n",(0,o.jsx)(e.h2,{id:"adding-edges-to-connect-the-nodes",children:"Adding edges to connect the nodes"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",children:"const edges = double_elim_8_finished?.matches\n  ?.filter((match) => match.winnerGoesTo?.seriesUUID)\n  .map((match) => ({\n    id: `edge-${match.uuid}`,\n    source: match.uuid,\n    target: match.winnerGoesTo!.seriesUUID,\n  }));\n"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Edges connecting the nodes",src:t(2693).A+"",width:"1958",height:"1208"})})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},9316:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/3-nodes-2-edges-a5cb00aa297b8d86a015daf78667667d.png"},2693:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/edges-070086b843c897a025e1836b3dab4db5.png"},5555:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/match-components-502746d727f1a010635658db924054f9.png"},4824:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>d});var o=t(9474);const a={},i=o.createContext(a);function s(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);